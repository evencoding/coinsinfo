{"version":3,"sources":["GlobalStyles.tsx","atoms.ts","api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.tsx","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","reset","props","theme","bgColor","textColor","isDarkAtom","atom","key","default","BASE_URL","getCoins","fetch","then","response","json","fetchCoinITicker","coinId","Chart","isDark","useRecoilValue","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistody","refetchInterval","isLoading","data","type","series","name","map","price","close","options","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","labels","axisTicks","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Container","styled","div","Title","h1","Loader","PriceContainer","PriceList","Label","Value","Text","span","isPositive","PlusMinus","Price","useParams","quotes","USD","percent_change_15m","percent_change_1h","percent_change_24h","percent_change_7d","percent_change_30d","percent_change_1y","HomeLink","Link","Header","header","accentColor","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","Coin","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickerLoading","tickerData","loading","Helmet","to","rank","symbol","description","total_supply","max_supply","path","CoinsList","ul","li","Loading","Img","img","Coins","useState","setIsDark","setDarkAtem","useSetRecoilState","onClick","current","slice","coin","pathname","id","src","toLowerCase","alt","Router","exact","darkTheme","lightTheme","App","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.48069ab6.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset}\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        background-color: ${(props) => props.theme.bgColor};\r\n        color: ${(props) => props.theme.textColor};\r\n        font-family: 'Source Sans Pro', sans-serif;\r\n    }\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import { atom } from \"recoil\";\r\n\r\nexport const isDarkAtom = atom({\r\n  key: \"isDark\",\r\n  default: true,\r\n});\r\n","const BASE_URL = \"https://api.coinpaprika.com/v1\";\r\n\r\nexport function getCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinITicker(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistody(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 30;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistody } from \"../api\";\r\nimport ApexCharts from \"react-apexcharts\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistody(coinId),\r\n    { refetchInterval: 10000 }\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading...\"\r\n      ) : (\r\n        <ApexCharts\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => price.close),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? \"dark\" : \"light\",\r\n            },\r\n            chart: {\r\n              height: 500,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: false },\r\n            stroke: {\r\n              curve: \"smooth\",\r\n              width: 5,\r\n            },\r\n            yaxis: { show: false },\r\n            xaxis: {\r\n              axisBorder: { show: true },\r\n              labels: { show: true },\r\n              axisTicks: { show: true },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 99] },\r\n            },\r\n            colors: [\"#0fbcf9\"],\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$ ${value.toFixed(3)}`,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useParams } from \"react-router\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoinITicker } from \"../api\";\r\nimport styled from \"styled-components\";\r\n\r\n//css\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n`;\r\nconst Title = styled.h1`\r\n  color: ${(props) => props.theme.textColor};\r\n  font-size: 30px;\r\n  text-align: center;\r\n`;\r\nconst Loader = styled.div`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\nconst PriceContainer = styled.div`\r\n  margin-top: 20px;\r\n`;\r\nconst PriceList = styled.div`\r\n  padding: 20px;\r\n  border: 1px solid ${(props) => props.theme.textColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nconst Label = styled.div``;\r\nconst Value = styled.div``;\r\nconst Text = styled.span<{ isPositive: boolean }>`\r\n  color: ${(props) => (props.isPositive ? `#00b894` : `#ff7675`)};\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  //quotes: object;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\nfunction PlusMinus(value: number | undefined) {\r\n  if (value) {\r\n    return value > 0;\r\n  }\r\n}\r\n\r\nfunction Price() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { isLoading, data } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinITicker(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  return (\r\n    <Container>\r\n      <Title>{coinId} Price</Title>\r\n      {isLoading ? (\r\n        <Loader>Price loading...</Loader>\r\n      ) : (\r\n        <PriceContainer>\r\n          <PriceList>\r\n            <Label>Percent change (15minutes)</Label>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  PlusMinus(data?.quotes.USD.percent_change_15m) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_15m}%\r\n              </Text>\r\n            </Value>\r\n          </PriceList>\r\n          <PriceList>\r\n            <Label>Percent change (1hour)</Label>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  PlusMinus(data?.quotes.USD.percent_change_1h) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_1h}%\r\n              </Text>\r\n            </Value>\r\n          </PriceList>\r\n          <PriceList>\r\n            <Label>Percent change (1day)</Label>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  PlusMinus(data?.quotes.USD.percent_change_24h) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_24h}%\r\n              </Text>\r\n            </Value>\r\n          </PriceList>\r\n          <PriceList>\r\n            <Label>Percent change (1Week)</Label>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  PlusMinus(data?.quotes.USD.percent_change_7d) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_7d}%\r\n              </Text>\r\n            </Value>\r\n          </PriceList>\r\n          <PriceList>\r\n            <Label>Percent change (1month)</Label>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  PlusMinus(data?.quotes.USD.percent_change_30d) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_30d}%\r\n              </Text>\r\n            </Value>\r\n          </PriceList>\r\n          <PriceList>\r\n            <Label>Percent change (1year)</Label>\r\n            <Value>\r\n              <Text\r\n                isPositive={\r\n                  PlusMinus(data?.quotes.USD.percent_change_1y) === true\r\n                }\r\n              >\r\n                {data?.quotes.USD.percent_change_1y}%\r\n              </Text>\r\n            </Value>\r\n          </PriceList>\r\n        </PriceContainer>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinITicker } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst HomeLink = styled(Link)`\r\n  position: absolute;\r\n  top: 30px;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${(props) => props.theme.accentColor};\r\n  font-size: 26px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n  line-height: 18px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface ILocation {\r\n  name: string;\r\n}\r\n\r\ninterface IParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface IInfo {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface ITicker {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<IParams>();\r\n  const { state } = useLocation<ILocation>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<IInfo>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickerLoading, data: tickerData } = useQuery<ITicker>(\r\n    [\"ticker\", coinId],\r\n    () => fetchCoinITicker(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  const loading = infoLoading || tickerLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{state?.name}</title>\r\n      </Helmet>\r\n      <HomeLink to=\"/\">\r\n        <span>Home</span>\r\n      </HomeLink>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>{tickerData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickerData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickerData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/:coinId/Chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n            <Route path={`/:coinId/Price`}>\r\n              <Price />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getCoins } from \"../api\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 450px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  height: 10vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 32px;\r\n  color: ${(props) => props.theme.accentColor};\r\n  position: relative;\r\n  span {\r\n    position: absolute;\r\n    color: ${(props) => props.theme.textColor};\r\n    font-size: 15px;\r\n    right: -100px;\r\n    top: 12px;\r\n    &:hover {\r\n      font-size: 50%;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  border: 2px solid #899db9;\r\n  border-radius: 20px;\r\n  margin-bottom: 20px;\r\n  a {\r\n    padding: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  font-size: 25px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  height: 35px;\r\n  width: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoins {\r\n  id: string;\r\n  is_active: boolean;\r\n  is_new: boolean;\r\n  name: string;\r\n  rank: number;\r\n  symbol: string;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const [isDark, setIsDark] = useState(true);\r\n  const setDarkAtem = useSetRecoilState(isDarkAtom);\r\n  const toggleDarkAtom = () => {\r\n    setDarkAtem((current) => !current);\r\n    setIsDark(!isDark);\r\n  };\r\n  const { isLoading, data } = useQuery<ICoins[]>(\"coins\", getCoins);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Coins</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          Coins\r\n          <span onClick={toggleDarkAtom}>\r\n            {isDark ? \"Light Mode\" : \"Dark Mode\"}\r\n          </span>\r\n        </Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loading>Loading...</Loading>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 99).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                  alt=\"\"\r\n                />\r\n                <span>{coin.name} &rarr;</span>\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n        <Route path=\"/:coinId\">\r\n          <Coin />\r\n        </Route>\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"#f5f6fa\",\r\n  accentColor: \"#9c88ff\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"#f5f6fa\",\r\n  textColor: \"black\",\r\n  accentColor: \"#9c88ff\",\r\n};\r\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport { isDarkAtom } from \"./atoms\";\nimport Router from \"./Router\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyles />\n        <Router />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}