{"version":3,"sources":["GlobalStyles.tsx","atoms.ts","api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.tsx","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","reset","props","theme","bgColor","textColor","isDarkAtom","atom","key","default","BASE_URL","getCoins","fetch","then","response","json","fetchCoinHistody","coinId","endDate","Math","floor","Date","now","startDate","Chart","isDark","useRecoilValue","useQuery","refetchInterval","isLoading","data","type","series","name","map","price","close","options","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","labels","axisTicks","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","PriceContainer","styled","div","PriceDate","PriceContent","PriceTime","Price","v","time_open","slice","open","high","low","Container","HomeLink","Link","Header","header","Title","h1","accentColor","Loader","span","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinITicker","tickerLoading","tickerData","loading","Helmet","to","rank","symbol","quotes","USD","description","total_supply","max_supply","path","CoinsList","ul","li","Loading","Img","img","Coins","useState","setIsDark","setDarkAtem","useSetRecoilState","onClick","current","coin","pathname","id","src","toLowerCase","alt","Router","exact","darkTheme","lightTheme","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.2fd0530d.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset}\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        background-color: ${(props) => props.theme.bgColor};\r\n        color: ${(props) => props.theme.textColor};\r\n        font-family: 'Source Sans Pro', sans-serif;\r\n    }\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import { atom } from \"recoil\";\r\n\r\nexport const isDarkAtom = atom({\r\n  key: \"isDark\",\r\n  default: false,\r\n});\r\n","const BASE_URL = \"https://api.coinpaprika.com/v1\";\r\n\r\nexport function getCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinITicker(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistody(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 30;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistody } from \"../api\";\r\nimport ApexCharts from \"react-apexcharts\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const isDark = useRecoilValue(isDarkAtom);\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistody(coinId),\r\n    { refetchInterval: 10000 }\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading...\"\r\n      ) : (\r\n        <ApexCharts\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => price.close),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: isDark ? \"dark\" : \"light\",\r\n            },\r\n            chart: {\r\n              height: 500,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: false },\r\n            stroke: {\r\n              curve: \"smooth\",\r\n              width: 5,\r\n            },\r\n            yaxis: { show: false },\r\n            xaxis: {\r\n              axisBorder: { show: true },\r\n              labels: { show: true },\r\n              axisTicks: { show: true },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 99] },\r\n            },\r\n            colors: [\"#0fbcf9\"],\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$ ${value.toFixed(3)}`,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinHistody } from \"../api\";\r\n\r\nconst PriceContainer = styled.div`\r\n  padding: 0px 90px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst PriceDate = styled.div``;\r\n\r\nconst PriceContent = styled.div``;\r\n\r\nconst PriceTime = styled.div`\r\n  span {\r\n    &:first-child {\r\n      margin-right: 8px;\r\n    }\r\n    &:not(:last-child) {\r\n      margin-bottom: 3px;\r\n    }\r\n  }\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Price({ coinId }: ChartProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistody(coinId),\r\n    { refetchInterval: 10000 }\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading...\"\r\n      ) : (\r\n        <>\r\n          {data?.map((v) => (\r\n            <PriceContainer key={v.time_open}>\r\n              <PriceDate>{v.time_open.slice(0, 10)}</PriceDate>\r\n              <PriceContent>\r\n                <PriceTime>\r\n                  <span>Open</span>\r\n                  <span>{v.open.toFixed(3)}</span>\r\n                </PriceTime>\r\n                <PriceTime>\r\n                  <span>High</span>\r\n                  <span>{v.high.toFixed(3)}</span>\r\n                </PriceTime>\r\n                <PriceTime>\r\n                  <span>Low</span>\r\n                  <span>{v.low.toFixed(3)}</span>\r\n                </PriceTime>\r\n                <PriceTime>\r\n                  <span>Close</span>\r\n                  <span>{v.close.toFixed(3)}</span>\r\n                </PriceTime>\r\n              </PriceContent>\r\n            </PriceContainer>\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinITicker } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst HomeLink = styled(Link)`\r\n  position: absolute;\r\n  top: 30px;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: ${(props) => props.theme.accentColor};\r\n  font-size: 26px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  display: block;\r\n  text-align: center;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n  line-height: 18px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface ILocation {\r\n  name: string;\r\n}\r\n\r\ninterface IParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface IInfo {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface ITicker {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<IParams>();\r\n  const { state } = useLocation<ILocation>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<IInfo>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickerLoading, data: tickerData } = useQuery<ITicker>(\r\n    [\"ticker\", coinId],\r\n    () => fetchCoinITicker(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  const loading = infoLoading || tickerLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{state?.name}</title>\r\n      </Helmet>\r\n      <HomeLink to=\"/\">\r\n        <span>Home</span>\r\n      </HomeLink>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>{tickerData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickerData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickerData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/coin/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/coin/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/coin/:coinId/Chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n            <Route path={`/coin/:coinId/Price`}>\r\n              <Price coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { getCoins } from \"../api\";\r\nimport { isDarkAtom } from \"../atoms\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 450px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  height: 10vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 32px;\r\n  color: ${(props) => props.theme.accentColor};\r\n  position: relative;\r\n  span {\r\n    position: absolute;\r\n    color: ${(props) => props.theme.textColor};\r\n    font-size: 15px;\r\n    right: -100px;\r\n    top: 12px;\r\n    &:hover {\r\n      font-size: 50%;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  border: 2px solid #899db9;\r\n  border-radius: 20px;\r\n  margin-bottom: 20px;\r\n  a {\r\n    padding: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  font-size: 25px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  height: 35px;\r\n  width: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoins {\r\n  id: string;\r\n  is_active: boolean;\r\n  is_new: boolean;\r\n  name: string;\r\n  rank: number;\r\n  symbol: string;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const [isDark, setIsDark] = useState(false);\r\n  const setDarkAtem = useSetRecoilState(isDarkAtom);\r\n  const toggleDarkAtom = () => {\r\n    setDarkAtem((current) => !current);\r\n    setIsDark(!isDark);\r\n  };\r\n  const { isLoading, data } = useQuery<ICoins[]>(\"coins\", getCoins);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Coins</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          Coins\r\n          <span onClick={toggleDarkAtom}>\r\n            {isDark ? \"Light Mode\" : \"Dark Mode\"}\r\n          </span>\r\n        </Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loading>Loading...</Loading>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 99).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/coin/${coin.id}`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                  alt=\"\"\r\n                />\r\n                <span>{coin.name} &rarr;</span>\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n        <Route path=\"/coin/:coinId\">\r\n          <Coin />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"#f5f6fa\",\r\n  accentColor: \"#9c88ff\",\r\n};\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"#f5f6fa\",\r\n  textColor: \"black\",\r\n  accentColor: \"#9c88ff\",\r\n};\r\n","import React from \"react\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { useRecoilValue } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyles from \"./GlobalStyles\";\nimport { isDarkAtom } from \"./atoms\";\nimport Router from \"./Router\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyles />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}